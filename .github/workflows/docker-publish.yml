name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: '33 12 * * *'
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  CONTAINER_FAMILIES: "noble noble-chiseled jammy jammy-chiseled"

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4.0.1

      - name: Build
        run: |
          for FAMILY in $CONTAINER_FAMILIES; do
            dotnet publish --os linux --arch x64 -p:ContainerImageTags=$FAMILY -p:ContainerFamily=$FAMILY
            docker tag echoserver:$FAMILY ${{ env.REGISTRY }}/${{ github.repository_owner }}/echoserver:$FAMILY
          done

      - name: Push Docker image
        if: github.event_name != 'pull_request'
        run: |
          for FAMILY in $CONTAINER_FAMILIES; do
            docker push ${{ env.REGISTRY }}/${{ github.repository_owner }}/echoserver:$FAMILY
          done
